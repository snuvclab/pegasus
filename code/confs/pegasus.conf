train{
    exps_folder = ../data/experiments/ 
    projectname = total_composition_Guy
    methodname = pegasus
    train_runner = scripts.train.TrainRunnerPEGASUS
    dataset_class = datasets.datamodule.FaceDataset
    module_class = model.pegasus_module.PEGASUSModule          
    model_class = model.pegasus.PEGASUSModel         
    loss_class = model.loss.LossPEGASUS
    learning_rate = 1.0e-4
    learning_rate_cam = 5.0e-4
    num_pixels = 2048
    max_points_training = 240000
    max_batch = 1
    upsample_freq = 2
    plot_freq = 1            
    save_freq = 500      
    log_freq = 50            
    sched_milestones = [40, 60]
    sched_factor = 0.5
    GT_lbs_milestones = [10, 20, 30, 40]
    GT_lbs_factor = 0.5
    optimize_expression=False 
    optimize_camera=False 

    tf32 = False
    randomseed = 42   
    optimize_latent_code = False
    optimize_scene_latent_code = True
    enable_prune = True
    enable_upsample = True
    meta_learning{
        load_from_meta_learning = True
        path = ../data/experiments/synthetic_db_Hyunsoo_Cha_Orange/pegasus/original_Hyunsoo_Cha_Orange/train/checkpoints
        epoch_num = 10
    }
    target_training = False
    voting_threshold = 70
    distributed = False     
    accelerate = False
    target_training = False
}
val{
    is_val = True
}
test{
    test_runner = scripts.test.TestRunnerPEGASUS  
    test_frame_rate = 25     
    default_rendering = False
    target_default_rendering = False
    mask_rendering = False
    multi_composition = False
    multi_composition_list = [eyebrows_Chloe_Grace_Moretz, mouth_LILHUDDY]
    scene_latent_interpolation = True
    scene_latent_interpolation_category = nose
    image_metric = False
    target_human{
        blending = False         # NOTE 이걸로 할지말지 결정함. 이게 False이면 아랫것도 다 안불러옴.
        target_interpolation = False
        target_category = hair
        blending_default_rendering = False
        epoch_num = 68
        conf = confs/th_from_scratch_dave.conf # th_from_scratch_dave.conf
    }
}
loss{
    mask_weight = 1.0
    lbs_weight = 10.0
    eikonal_weight = 0.1
    sdf_consistency_weight =1.0
    vgg_feature_weight = 0.1
    latent_reg_weight = 0.01
    normal_weight = 0.1
    segment_weight = 0.1
}
dataset{
    data_folder = ../data/datasets
    subject_name = synthetic_db_Hyunsoo_Cha_Orange
    json_name = flame_params_independent.json
    use_mean_expression = True
    use_var_expression = True 
    canonical_pose = 0.4 
    shape_frame = False
    shape_scene = True
    shape_standard = False
    shape_standard_scene = source_Guy
    shape_test = target_Guy
    category_latent_dim = 16
    num_category = 9
    mask_object = True
    mask_source = False
    train{
        sub_dir = [eyebrows_Chloe_Grace_Moretz, eyebrows_KSI, eyebrows_LILHUDDY, eyebrows_Malcolm_Gladwell, eyebrows_Owen_Wilson, 
                   eyes_Chloe_Grace_Moretz, eyes_KSI, eyes_LILHUDDY, eyes_Malcolm_Gladwell, eyes_Owen_Wilson,                             
                   hair_Chloe_Grace_Moretz, hair_John_Krasinski, hair_KAROL_G, hair_LaurDIY, hair_LILHUDDY, hair_Malcolm_Gladwell,        
                   hat_Danny_DeVito, hat_Ice_Cube, hat_Jeff_Staple, hat_Sommelier, hat_Syuka_beigehat,                                
                   hat_Syuka_brownhat, hat_Syuka_cap, hat_Syuka_crimsonhat, hat_Syuka_orangehat, hat_Syuka_foxhat,                    
                   hat_Syuka_pinkhat, hat_Syuka_redhat, hat_Syuka_santahat,                                                                     
                   mouth_Chloe_Grace_Moretz, mouth_KSI, mouth_LILHUDDY, mouth_Malcolm_Gladwell, mouth_Owen_Wilson,                     
                   nose_Chloe_Grace_Moretz, nose_KSI, nose_LILHUDDY, nose_Malcolm_Gladwell, nose_Owen_Wilson]                        
        img_res = [512, 512]
        subsample_type = frames   
        subsample = 850
        load_images = False
    }
    val{
        sub_dir = [target_Yufeng]
        img_res = [512, 512]
        subsample_type = frames   
        subsample = [1]
        load_images = False
    }
    test{
        sub_dir = [target_Hyunsoo_Cha]  
        img_res = [512, 512]
        subsample_type = ratio
        subsample = 1
        load_images = False
    }
}
model{
    prune_thresh=0.5
    latent_code_dim = 320
    binary_segmentation = True
    FLAME_class = flame.FLAME.FLAME_ShapeCancel
    geometry_class = model.geometry_network.GeometryNetworkPEGASUS 
    deformer_class = model.deformer_network.ForwardDeformerPEGASUS
    rendering_class = model.texture_network.RenderingNetworkPEGASUS 
    pointcloud_class = model.point_cloud.PointCloudPEGASUS
    geometry_network
    {
        d_in = 3
        d_out = 1
        feature_vector_size = 3
        dims = [512, 512, 512, 512, 512, 512, 512, 512, 512]   
        geometric_init = True
        bias = 0.6
        skip_in = [4]
        weight_norm = True
        multires = 6
    }
    rendering_network
    {
        d_in = 3
        feature_vector_size = 0
        d_out = 3
        dims = [512, 512]                                
        weight_norm = True
        multires_view = 0
        multires_pnts = 0
    }
    deformer_network
    {
        d_in = 3
        dims = [128, 128, 128, 128]                              
        weight_norm = True
        multires = 0
	    num_exp = 50
	    ghostbone = True
	    deform_c = True
        deform_cc = True
    }
    point_cloud
    {
        max_points= 174000
        min_radius = 0.005
    }
}
